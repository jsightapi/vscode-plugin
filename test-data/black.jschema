{
    "string": "someString", // {type: "enum", enum: ["enum","two","three"]}
    "number": 123, // {min: 1, max: 200}
    "const": true, // {type: "@someType"}
    @namedKey: @type, // {optional: true},
    "array": [
        1,
        "two",
        true,
        @type
    ],

    "object": {
        "innerString": "some", // {minLength: 1} # comment
        "innerFloat": -0.2, // {type: "decimal", precision: 1}
    },

    "enum": "enum", // {type: "enum", enum: ["enum", "class", "function"]} â€” this is enum
    "regex": "val", // {regex: "[a-z]+"}

    "booleans": "val", // {optional: true, nullable: false, const: true},

    "exclusives": 10, // {min: 1, max: 10, exclusiveMinimum: true, exclusiveMaximum: true}

    "allOfMany": {}, // {allOf: ["@cat", "@dog", "@pig"]}

    "allOfOne": {}, // {allOf: "@cat"},

    "addPropBool": "val", // {additionalProperties: true}

    "addPropType": "val", // {additionalProperties: "enum"}

    "addPropBoolSubschema": "val", // {additionalProperties: "@cat"}

    "or": "or" /*   {
                        or: [
                                {type: "string"},
                                {enum: ["min", "max", 2, 3, "min"]},
                                "@someType"
                            ]
                    }
                */

}